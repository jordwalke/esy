#!/bin/bash -e
#
# This is a very simple pjc-aware ocamlfind-based build tool.

# Build

DEPENDS=""
for p in $cur__depends; do
  if [ "$p" != "buildtool" ] && \
     [ "$p" != "ocaml" ] && \
     [ "$p" != "@esy-ocaml/ocaml" ] && \
     [ "$p" != "ocamlfind" ]; then
    DEPENDS="$DEPENDS $p"
  fi
done

echo "Build location: $cur__target_dir"

mkdir -p $cur__target_dir/lib
mkdir -p $cur__target_dir/bin

## Prepare ocamlfind options

OCAMLFIND_ARGS=""

for p in $DEPENDS; do
  OCAMLFIND_ARGS="$OCAMLFIND_ARGS -package $p"
done

## Build modules

for src in `find $cur__root/lib -name "*.ml"`; do
  ocamlfind ocamlc -c $OCAMLFIND_ARGS $src -o $cur__target_dir/lib/`basename $src`
done

for src in `find $cur__root/bin -name "*.ml"`; do
  ocamlfind ocamlc -c $OCAMLFIND_ARGS $src -o $cur__target_dir/bin/`basename $src`
done

## Link executables

for obj in `find $cur__target_dir/bin -name "*.cmo"`; do
  target=$cur__target_dir/`basename ${src%.*}`
  ocamlfind ocamlc \
    -linkpkg $OCAMLFIND_ARGS \
    $obj -o $target
done

## Produce archive

ocamlc -a \
  -o $cur__target_dir/lib/$cur__name.cma \
  `find $cur__target_dir/lib -name "*.cmo"`

## Write META for findlib installation

cat <<EOF > "$cur__target_dir"/lib/META
pkgname = "$cur__name"
version = "$cur__version"
archive(byte) = "$cur__name.cma"
requires = "$DEPENDS"
EOF

# Install

echo "Install location: $cur__install"

rm -rf $cur__install/lib
mkdir -p $cur__install/lib

echo $OCAMLFIND_CONF
cat $cur__target_dir/findlib.conf
ocamlfind install $cur__name \
  "$cur__target_dir"/lib/META \
  "$cur__target_dir"/lib/*.cma \
  "$cur__target_dir"/lib/*.cmi \
  "$cur__target_dir"/lib/*.cmo
